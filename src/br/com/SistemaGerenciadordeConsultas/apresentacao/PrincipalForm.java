/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.SistemaGerenciadordeConsultas.apresentacao;

import br.com.SistemaGerenciadordeConsultas.entidade.QuantidadeConsultaPorDia;
import br.com.SistemaGerenciadordeConsultas.negocio.ConsultaBO;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Rayssa
 */
public class PrincipalForm extends javax.swing.JFrame {

    /**
     * Creates new form PrincipalForm
     */
    public PrincipalForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        menuCadastro = new javax.swing.JMenu();
        mnuUsuario = new javax.swing.JMenuItem();
        mnuEspecialidade = new javax.swing.JMenuItem();
        mnuMedico = new javax.swing.JMenuItem();
        mnuPaciente = new javax.swing.JMenuItem();
        mnuConsulta = new javax.swing.JMenuItem();
        menuAgenda = new javax.swing.JMenu();
        mnuAgendaGeral = new javax.swing.JMenuItem();
        mnuAgendaPorMedico = new javax.swing.JMenuItem();
        MenuRelatorios = new javax.swing.JMenu();
        mnuRelatorioMedico = new javax.swing.JMenuItem();
        mnuRelatorioPaciente = new javax.swing.JMenuItem();
        mnuConsultaPorDia = new javax.swing.JMenuItem();
        mnuSistema = new javax.swing.JMenu();
        mnuSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TELA  PRINCIPAL");

        menuCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/SistemaGerenciadordeConsultas/apresentacao/icones/iconCadastro.jpg"))); // NOI18N
        menuCadastro.setText("Cadastros");

        mnuUsuario.setText("Usuário");
        mnuUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuUsuarioActionPerformed(evt);
            }
        });
        menuCadastro.add(mnuUsuario);

        mnuEspecialidade.setText("Especialidade");
        mnuEspecialidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEspecialidadeActionPerformed(evt);
            }
        });
        menuCadastro.add(mnuEspecialidade);

        mnuMedico.setText("Médico");
        mnuMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuMedicoActionPerformed(evt);
            }
        });
        menuCadastro.add(mnuMedico);

        mnuPaciente.setText("Paciente");
        mnuPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuPacienteActionPerformed(evt);
            }
        });
        menuCadastro.add(mnuPaciente);

        mnuConsulta.setText("Consulta");
        mnuConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuConsultaActionPerformed(evt);
            }
        });
        menuCadastro.add(mnuConsulta);

        jMenuBar1.add(menuCadastro);

        menuAgenda.setText("Agenda");

        mnuAgendaGeral.setText("Agenda Geral");
        mnuAgendaGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAgendaGeralActionPerformed(evt);
            }
        });
        menuAgenda.add(mnuAgendaGeral);

        mnuAgendaPorMedico.setText("Buscar Por Medico");
        mnuAgendaPorMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAgendaPorMedicoActionPerformed(evt);
            }
        });
        menuAgenda.add(mnuAgendaPorMedico);

        jMenuBar1.add(menuAgenda);

        MenuRelatorios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/SistemaGerenciadordeConsultas/apresentacao/icones/imagemPdf.png"))); // NOI18N
        MenuRelatorios.setText("Relatorios");

        mnuRelatorioMedico.setText("Consulta Medico(A)");
        mnuRelatorioMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRelatorioMedicoActionPerformed(evt);
            }
        });
        MenuRelatorios.add(mnuRelatorioMedico);

        mnuRelatorioPaciente.setText("Consulta Paciente");
        mnuRelatorioPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRelatorioPacienteActionPerformed(evt);
            }
        });
        MenuRelatorios.add(mnuRelatorioPaciente);

        mnuConsultaPorDia.setText("Gráfico Consultas Diárias");
        mnuConsultaPorDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuConsultaPorDiaActionPerformed(evt);
            }
        });
        MenuRelatorios.add(mnuConsultaPorDia);

        jMenuBar1.add(MenuRelatorios);

        mnuSistema.setText("Sistema");
        mnuSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSistemaActionPerformed(evt);
            }
        });

        mnuSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        mnuSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/SistemaGerenciadordeConsultas/apresentacao/icones/sair.png"))); // NOI18N
        mnuSair.setText("Sair");
        mnuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSairActionPerformed(evt);
            }
        });
        mnuSistema.add(mnuSair);

        jMenuBar1.add(mnuSistema);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 803, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 442, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(819, 531));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSairActionPerformed
        if(javax.swing.JOptionPane.showConfirmDialog(null,"Deseja Sair do Sistema?","ATENÇÃO ",javax.swing.JOptionPane.YES_NO_OPTION )==0){  
            System.exit(0);  
        }
        
    }//GEN-LAST:event_mnuSairActionPerformed

    private void mnuUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuUsuarioActionPerformed
        UsuarioForm usuarioForm = new UsuarioForm();
        usuarioForm.setVisible(true);
    }//GEN-LAST:event_mnuUsuarioActionPerformed

    private void mnuEspecialidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEspecialidadeActionPerformed
        EspecialidadeForm ef = new EspecialidadeForm();
        ef.setVisible(true);
    }//GEN-LAST:event_mnuEspecialidadeActionPerformed

    private void mnuMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuMedicoActionPerformed
        MedicoForm medicoForm = new MedicoForm();
        medicoForm.setVisible(true);
    }//GEN-LAST:event_mnuMedicoActionPerformed

    private void mnuPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuPacienteActionPerformed
        PacienteForm pacienteForm = new PacienteForm();
        pacienteForm.setVisible(true);
    }//GEN-LAST:event_mnuPacienteActionPerformed

    private void mnuConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuConsultaActionPerformed
        NovaConsultaForm novaConsultaForm = new NovaConsultaForm();
        novaConsultaForm.setVisible(true);
    }//GEN-LAST:event_mnuConsultaActionPerformed

    private void mnuAgendaGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAgendaGeralActionPerformed
        AgendaGeralForm geralForm = new AgendaGeralForm();
        geralForm.setVisible(true);
    }//GEN-LAST:event_mnuAgendaGeralActionPerformed

    private void mnuAgendaPorMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAgendaPorMedicoActionPerformed
        AbrirAgendaMedicoForm abrirAgendaMedicoForm = new AbrirAgendaMedicoForm();
        abrirAgendaMedicoForm.setVisible(true);
    }//GEN-LAST:event_mnuAgendaPorMedicoActionPerformed

    private void mnuRelatorioMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRelatorioMedicoActionPerformed
        RelatorioMedicoForm relatorioMedicoForm = new RelatorioMedicoForm();
        relatorioMedicoForm.setVisible(true);
    }//GEN-LAST:event_mnuRelatorioMedicoActionPerformed

    private void mnuRelatorioPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRelatorioPacienteActionPerformed
        RelatorioPacienteForm pacienteForm = new RelatorioPacienteForm();
        pacienteForm.setVisible(true);
    }//GEN-LAST:event_mnuRelatorioPacienteActionPerformed

    private void mnuConsultaPorDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuConsultaPorDiaActionPerformed
        // TODO add your handling code here:
        List<QuantidadeConsultaPorDia> listaDeConsultasPorDia;
        ConsultaBO consultaBO = new ConsultaBO();
        try {
            listaDeConsultasPorDia = consultaBO.buscarConsultasPorDia();
            this.gerarGraficoConsultaPorDia(listaDeConsultasPorDia);
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_mnuConsultaPorDiaActionPerformed

    private void mnuSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSistemaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuSistemaActionPerformed

    private void gerarGraficoConsultaPorDia(List<QuantidadeConsultaPorDia> consultas){
        try{
            String arquivoRelatorio = System.getProperty("user.dir")
                   + "/relatorios/GraficoConsultaPorDia.jasper";
            
            Map<String, Object> paramentros = new HashMap<String, Object>();
            
            JRBeanCollectionDataSource fonteDados 
                      = new JRBeanCollectionDataSource(consultas);
            
            JasperPrint relatorioGerado = JasperFillManager.fillReport(arquivoRelatorio, paramentros, fonteDados);
            
            JasperViewer telaExibicaoRelatorio 
                       = new JasperViewer(relatorioGerado, false);
            telaExibicaoRelatorio.setTitle("Gráfico de Consultas por Dia");
            telaExibicaoRelatorio.setVisible(true);
        } catch(JRException ex){            
            JOptionPane.showMessageDialog(this, "Erro ao exibir gráfico.", "Erro", JOptionPane.ERROR_MESSAGE);
        } 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuRelatorios;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu menuAgenda;
    private javax.swing.JMenu menuCadastro;
    private javax.swing.JMenuItem mnuAgendaGeral;
    private javax.swing.JMenuItem mnuAgendaPorMedico;
    private javax.swing.JMenuItem mnuConsulta;
    private javax.swing.JMenuItem mnuConsultaPorDia;
    private javax.swing.JMenuItem mnuEspecialidade;
    private javax.swing.JMenuItem mnuMedico;
    private javax.swing.JMenuItem mnuPaciente;
    private javax.swing.JMenuItem mnuRelatorioMedico;
    private javax.swing.JMenuItem mnuRelatorioPaciente;
    private javax.swing.JMenuItem mnuSair;
    private javax.swing.JMenu mnuSistema;
    private javax.swing.JMenuItem mnuUsuario;
    // End of variables declaration//GEN-END:variables
}
